name: VM
'on':
  push:
    branches:
      - master
    tags:
      - '*'
    paths-ignore:
      - packages/account/**
      - packages/block/**
      - packages/blockchain/**
      - packages/common/**
      - packages/tx/**
  pull_request:
    types: [opened, reopened, synchronize]
    paths-ignore:
      - packages/account/**
      - packages/block/**
      - packages/blockchain/**
      - packages/common/**
      - packages/tx/**
jobs:
  test-vm-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/checkout@v1
      - run: npx lerna bootstrap --scope ethereumjs-vm --ignore-scripts --include-dependencies --no-ci
      - run: npx lerna run --scope ethereumjs-vm --include-dependencies build
      - run: npx lerna run lint --scope ethereumjs-vm
      - run: npm run test:API
        working-directory: '${{ env.cwd }}'
      - run: npm run test:API:browser
        working-directory: '${{ env.cwd }}'
    env:
      cwd: '${{github.workspace}}/packages/vm'
  test-vm-state:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/checkout@v1
      - run: npx lerna bootstrap --scope ethereumjs-vm --ignore-scripts --include-dependencies --no-ci
      - run: npx lerna run --scope ethereumjs-vm --include-dependencies build
      - run: npm run test:state:selectedForks
        working-directory: '${{ env.cwd }}'
      - run: npm run coverage
        working-directory: '${{ env.cwd }}'
      - uses: codecov/codecov-action@v1
        with:
          file: '${{ env.cwd }}/coverage/lcov.info'
          flags: vm
    env:
      cwd: '${{github.workspace}}/packages/vm'
  test-vm-blockchain:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/checkout@v1
      - run: npx lerna bootstrap --scope ethereumjs-vm --ignore-scripts --include-dependencies --no-ci
      - run: npx lerna run --scope ethereumjs-vm --include-dependencies build
      - run: npm run test:blockchain
        working-directory: '${{ env.cwd }}'
    env:
      cwd: '${{github.workspace}}/packages/vm'
